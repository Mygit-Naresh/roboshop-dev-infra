pipeline {
   agent {
     node {
        label 'jenkins-agent-1'
        }
}
options {
                timeout(time: 1, unit: 'HOURS') 
            }
parameters { choice(name: 'TERRAFORMACTION', choices: ['deploy', 'destroy'], description: 'terraform infra creation') }
    stages {
stage('init'){

        steps {
          script {
           sh """
           cd 01-vpc
           terraform init -reconfigure
           """
          }
      }
}
stage('terraform plan'){

        steps {
          script {
           sh """
           cd 01-vpc
           terraform plan
           """
          }
      }
}
 when {
             expression { params.TERRAFORMACTION == 'deploy' }
        }
stage('terraform approve'){
 
 input {
                message "approve to continue terraform plan infra"
                ok "apply"
                submitter "alice,bob"
                parameters {
                    string(name: 'TERRAFORM', defaultValue: 'apply or deny', description: 'approve to continue terraform plan infra?')
                }
 }

        steps {
          script {
           sh """
           cd 01-vpc
           terraform apply -auto-approve
           """
          }
      }
    }
      when {
             expression { params.TERRAFORMACTION == 'destroy' }
        }
stage('terraform destroy'){

 input {
                message "approve to continue terraform destroy infra"
                ok "destroy"
                submitter "alice,bob"
                parameters {
                    string(name: 'TERRAFORM', defaultValue: 'apply or deny', description: 'approve to continue terraform destroy infra?')
                }
 }

        steps {
          script {
           sh """
           cd 01-vpc
           terraform destroy -auto-approve
           """
          }
      }
    }
}
}